@using EntityLayer.Concrete
@using Microsoft.JSInterop;
@model Project
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html lang="tr">
<body>
    <div id="loader-wrapper">
        <div id="loader"></div>
        <div class="loader-section section-left"></div>
        <div class="loader-section section-right"></div>
    </div>
    <nav class="navbar navbar-expand-lg">
        <div class="container-fluid">
            <a class="navbar-brand"
               href="@Url.Action("Index","Home")">
                <img src="~/img/logo.png" alt="logo" width="80px" />
                Proje Detay Sayfası
            </a>
            <button class="navbar-toggler"
                    type="button"
                    data-toggle="collapse"
                    data-target="#navbarSupportedContent"
                    aria-controls="navbarSupportedContent"
                    aria-expanded="false"
                    aria-label="Toggle navigation">
                <i class="fas fa-bars"></i>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav ml-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                            <span id="likeStatus">Projenin Beğeni Sayısı: @Model.LikeCount</span>
                            <i class="fa fa-heart" aria-hidden="true"></i>
                        <a href="@Url.Action("ToggleLike", "Project", new { id = Model.ProjectID })" class="btn btn-primary" id="likeButton">Projeyi Beğen</a>
                    </li>

                    <li class="nav-item">
                        <a href="@Url.Action("Index", "Home")" class="btn btn-primary">Ana Sayfa</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <hr />

    <div class="container-fluid tm-container-content tm-mt-60">
        <div class="row mb-4">
            <h2 class="col-12 tm-text-primary">
                @Model.Name
            </h2>
        </div>
        <div class="row mb-4 tm-text-year">
            <h5 class="col-12 tm-text-primary">@Model.Student.DepartmentCode / @Model.CreationTime?.ToString("Y") </h5>
        </div>
        <div class="row mb-4">
            <h5 class="col-12 tm-text-primary">
                @Model.Student.NameAndSurname / @Model.Teacher.NameAndSurname
            </h5>
        </div>

        <div class="row tm-mb-90">
            <div class="col-xl-6 col-lg-7 col-md-6 col-sm-12">
                @{
                        byte[] imageBytes = Model.Image1;
                        string base64String = Convert.ToBase64String(imageBytes);
                        string imgSrc = string.Format("data:image/jpeg;base64,{0}", base64String); 
                }
                <img class="img-fluid" src="@imgSrc" alt="Image @(1)"/>
            </div>
            <div class="col-xl-6 col-lg-7 col-md-6 col-sm-12">
                @{
                    byte[] imageBytes2 = Model.Image2;
                    string base64String2 = Convert.ToBase64String(imageBytes2);
                    string imgSrc2 = string.Format("data:image/jpeg;base64,{0}", base64String2);
                }
                <img class="img-fluid" src="@imgSrc2" alt="Image @(2)" />
            </div>
        </div>
        <div class="row tm-mb-90">
            <div class="col-xl-6 col-lg-7 col-md-6 col-sm-12">
                @{
                    byte[] imageBytes3 = Model.Image3;
                    string base64String3 = Convert.ToBase64String(imageBytes3);
                    string imgSrc3 = string.Format("data:image/jpeg;base64,{0}", base64String3);
                }
                <img class="img-fluid" src="@imgSrc3" alt="Image @(3)" />
            </div>
            <div class="col-xl-6 col-lg-7 col-md-6 col-sm-12">
            @{
                byte[] imageBytes4 = Model.Image4;
                string? base64String4 = Convert.ToBase64String(imageBytes4);
                string? imgSrc4 = string.Format("data:image/jpeg;base64,{0}", base64String4);
            }
            <img class="img-fluid" src="@imgSrc4" alt="Image @(4)" />
            </div>
        </div>
        </div>
        <div class="col-xl-12 col-lg-5 col-md-6 col-sm-12">
            <div class="tm-bg-gray tm-video-details">
                <div class="row mb-4">
                    <h2 class="col-12 tm-text-primary">Proje Konusu</h2>
                </div>
                <p class="mb-4">
                    @Model.Subject
                </p>
            </div>
        </div>
        <br />
        <br />
        <div class="col-xl-12 col-lg-5 col-md-6 col-sm-12">
            <div class="tm-bg-gray tm-video-details">
                <div class="row mb-4">
                    <h2 class="col-12 tm-text-primary">Proje Özeti</h2>
                </div>
                <p class="mb-4">
                        @Model.Description
                </p>
            </div>
        </div>
        <br />
        <br />
        <a href="@Url.Action("Index", "Home")" class="btn btn-primary project-detail-button">Ana Sayfaya geri dön</a>
        <br />
        <br />

    @await Html.PartialAsync("~/Views/Shared/Partial/FooterPartial.cshtml")
</body>
</html>

@section Scripts {
   @*  <script>
        // Sayfa yüklendiğinde çerezi kontrol et
        window.onload = function () {
            if (getCookie("liked") === "true") {
                // Kullanıcı daha önce beğenmiş, butonu kırmızı yap
                document.getElementById("likeButton").style.backgroundColor = "red";
                document.getElementById("likeButton").innerText = "Projeyi Beğendiniz";
                document.getElementById("likeButton").disabled = true;
            }
        }

        // Beğenme butonuna tıklanınca işlemi gerçekleştir
        document.getElementById("likeButton").onclick = function () {
            // Beğenme işlemini gerçekleştirin
            // Burada API çağrısı yapabilir veya işlemi tamamlayabilirsiniz.

            // Çereze "liked" anahtarını ekleyin ve değeri "true" olarak ayarlayın
            setCookie("liked", "true", 365); // Çerez bir yıl boyunca geçerli olacaktır

            // Butonu kırmızı yap
            this.style.backgroundColor = "red";
            this.innerText = "Beğendiniz";
            this.disabled = true;
        }

        // Çerez değerini alma fonksiyonu
        function getCookie(name) {
            var value = "; " + document.cookie;
            var parts = value.split("; " + name + "=");
            if (parts.length == 2) return parts.pop().split(";").shift();
        }

        // Çerez değeri ayarlama fonksiyonu
        function setCookie(name, value, days) {
            var expires = "";
            if (days) {
                var date = new Date();
                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                expires = "; expires=" + date.toUTCString();
            }
            document.cookie = name + "=" + value + expires + "; path=/";
        }
    </script> *@
    <script>
        // Sayfa yüklendiğinde çerezi kontrol et
        window.onload = function () {
            checkLikedStatus();

            // Beğenme butonuna tıklanınca işlemi gerçekleştir
            document.getElementById("likeButton").onclick = function () {
                // Eğer daha önce beğenildiyse işlemi gerçekleştirme
                if (getCookie("liked") === "true") {
                    return;
                }

                // Beğenme işlemini gerçekleştirin
                // Burada API çağrısı yapabilir veya işlemi tamamlayabilirsiniz.

                // Çereze "liked" anahtarını ekleyin ve değeri "true" olarak ayarlayın
                setCookie("liked", "true", 365); // Çerez bir yıl boyunca geçerli olacaktır

                // Butonu kırmızı yap
                this.style.backgroundColor = "red";
                this.innerText = "Beğendiniz";
                this.disabled = true;
            };
        };

        // Çerez değerini alma fonksiyonu
        function getCookie(name) {
            var value = "; " + document.cookie;
            var parts = value.split("; " + name + "=");
            if (parts.length == 2) return parts.pop().split(";").shift();
        }

        // Çerez değeri ayarlama fonksiyonu
        function setCookie(name, value, days) {
            var expires = "";
            if (days) {
                var date = new Date();
                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                expires = "; expires=" + date.toUTCString();
            }
            document.cookie = name + "=" + value + expires + "; path=/";
        }

        // Çerez kontrol işlemi
        function checkLikedStatus() {
            if (getCookie("liked") === "true") {
                // Kullanıcı daha önce beğenmiş, butonu kırmızı yap
                var likeButton = document.getElementById("likeButton");
                likeButton.style.backgroundColor = "red";
                likeButton.innerText = "Projeyi Beğendiniz";
                likeButton.disabled = true;
            }
        }
    </script>
}


    


